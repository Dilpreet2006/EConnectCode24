@model eConnect.Model.DownloadDocumentDetailModel

@{
    ViewBag.Title = "Download Document";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}


@using (Html.BeginForm("Edit", "DownloadDocument", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.DocumentPath)
    @Html.HiddenFor(model => model.DocumentStatus)
    <section class="section">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.DocumentName, htmlAttributes: new { @class = "required-field" })
                        @Html.EditorFor(model => model.DocumentName, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.DocumentName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "required-field" })
                        @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DocumentStatus, htmlAttributes: new { @class = "required-field" })
                                @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DocumentImage, htmlAttributes: new { @class = "" })
                            <input type="file" id="DocumentImage" name="DocumentImage" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />
                            @Html.ValidationMessageFor(model => model.DocumentImage, "", new { @class = "text-danger" })
                            @if (!string.IsNullOrEmpty(Model.DocumentPath))
                            {
                                <a href="@Url.Content(Model.DocumentPath)" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>

                    <div class="my-4 text-right">
                        <button class="btn btn-primary px-4" type="submit">Save</button> |
                        @Html.ActionLink("Cancel", "Index", "Menu", new { @class = "btn btn-dark px-4 mr-2" })
                    </div>
                </div>
            </div>
        </div>
    </section>}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
