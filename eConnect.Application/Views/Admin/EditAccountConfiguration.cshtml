@model eConnect.Model.AccountConfigurationModel
@{
    ViewBag.Title = "EditAccountConfiguration";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

@using (Html.BeginForm("EditAccountConfiguration", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <section class="section">
        <div class="card">
            <div class="card-body">
                <h6 class="text-primary mb-3"> Edit Account Configuration</h6>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BusinessId, htmlAttributes: new { @class = "required-field" })
                             @Html.DropDownListFor(o => o.BusinessId, new SelectList(ViewBag.BusinessList, "BusinessId", "Name"), "Select Type", new { id = "BusinessId", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeactiveAccountDaysForInvalidPwd, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.DeactiveAccountDaysForInvalidPwd, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DeactiveAccountDaysForInvalidPwd, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LockAccountDaysForInvalidPwd, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.LockAccountDaysForInvalidPwd, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LockAccountDaysForInvalidPwd, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AutoUnlockAccountMinutes, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.AutoUnlockAccountMinutes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AutoUnlockAccountMinutes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PasswordAutoExpireInDays, htmlAttributes: new { @class = "required-field" })
                        @Html.EditorFor(model => model.PasswordAutoExpireInDays, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PasswordAutoExpireInDays, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsPasswordNeverExpired, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.IsPasswordNeverExpired, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsPasswordNeverExpired, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ChangedPwdOnNextLogin, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.ChangedPwdOnNextLogin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ChangedPwdOnNextLogin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PasswordLength, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.PasswordLength, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PasswordLength, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NotifiedToCSP, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.NotifiedToCSP, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NotifiedToCSP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="my-4 text-right">
                    @Html.ActionLink("Cancel", "AccountConfiguration") | 
                    <button class="btn btn-primary px-4" type="submit" name="Update">Update</button>
                    @Html.HiddenFor(model => model.ConfigurationId)

                </div>
                <div class="text-left">
                  
                </div>
            </div>

        </div>
    </section>
}
@if (TempData["Message"] != null)
{
    <script type="text/javascript">
                $(function () {
                    alert("@TempData["Message"]")
                });
    </script>
}